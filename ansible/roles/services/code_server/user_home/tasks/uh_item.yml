---
# services/code_server/user_home/tasks/uh_item.yml

- name: Create sync server home, tools and data directories
  file:
    path: /data/{{ item }}
    state: directory
    owner: root
    group: root
    mode: 0711
  with_items:
    - home
    - tools
    - data
  become: true

- name: Create sync server htd/{{ current_item.user }} directory
  file:
    path: "/data/{{ item }}/{{ current_item.user }}"
    state: directory
    owner: "{{ current_item.user }}"
    group: "{{ current_item.user }}"
    mode: 0750
  with_items:
    - home
    - tools
    - data
  become: true

- name: Create sync server home/{{ current_item.user }}/.ssh directory
  file:
    path: "/data/home/{{ current_item.user }}/.ssh"
    state: directory
    owner: "{{ current_item.user }}"
    group: "{{ current_item.user }}"
    mode: 0700
  become: true

- name: Create sync ssh keypair /data/home/{{ current_item.user }}/.ssh/id_ssh_sync
  community.crypto.openssh_keypair:
    type: ed25519
    path: "/data/home/{{ current_item.user }}/.ssh/id_ssh_sync"
    owner: "{{ current_item.user }}"
    group: "{{ current_item.user }}"
  become: true
  register: skp_gen

- name: Authorize sync ssh key
  ansible.builtin.lineinfile:
    path: "/data/home/{{ current_item.user }}/.ssh/authorized_keys"
    create: true
    owner: "{{ current_item.user }}"
    group: "{{ current_item.user }}"
    mode: 0600
    line: "{{ skp_gen.public_key }}"
    insertafter: EOF
  become: true
  when: skp_gen.changed

- name: Load sync ssh public key
  ansible.builtin.slurp:
    src: "/data/home/{{ current_item.user }}/.ssh/id_ssh_sync.pub"
  become: true
  register: spubk

- name: Set sync ssh public key as fact
  set_fact: {"spubk_{{ current_item.user }}":"{{ spubk.content }}"}

- name: Load sync ssh private key
  ansible.builtin.slurp:
    src: "/data/home/{{ current_item.user }}/.ssh/id_ssh_sync"
  become: true
  register: sprik

- name: Set sync ssh private key as fact
  set_fact: {"sprik_{{ current_item.user }}":"{{ sprik.content }}"}

###