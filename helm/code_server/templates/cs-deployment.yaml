apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-cs
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-cs
  strategy:
    type: Recreate
  template:
    metadata:
      name: {{ .Release.Name }}-cs
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-cs
    spec:
      securityContext:
        runAsUser: {{ .Values.uid }}
        runAsGroup: {{ .Values.uid }}
        fsGroup: {{ .Values.fs_group }}
      containers:
        - name: code-server
          image: {{ .Values.images.codeserver }}
          env:
          - name: TZ
            value: Etc/UTC
          - name: USER
            value: oe
          - name: HOME
            value: /home/oe
          command:
            # https://github.com/linuxserver/docker-code-server/blob/master/root/etc/s6-overlay/s6-rc.d/svc-code-server/run
            - /usr/local/bin/code-server
            - --bind-addr
            - "0.0.0.0:8443"
            - --disable-telemetry
            - --auth
            - "none"
            - --app-name
            - "code-server-for-oe"
          volumeMounts:
          # FIXME
          - mountPath: /home/oe
            name: home-volume
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort: 8443
          livenessProbe:
            periodSeconds: 60
            timeoutSeconds: 2
            httpGet:
              path: /
              port: 8443
          readinessProbe:
            periodSeconds: 60
            timeoutSeconds: 2
            httpGet:
              path: /
              port: 8443
{{- if .Values.node_label -}}
      nodeSelector:
        otvl-agent: {{ .Values.node_label }}
{{- end }}
      volumes:
      - name: home-volume
        nfs:
          server: {{ .Values.nfs_server }}
          path: /data/home/{{ .Values.user }}
      tolerations:
      - key: "agent-deploy"
        value: "true"
        effect: "NoExecute"
      restartPolicy: Always
